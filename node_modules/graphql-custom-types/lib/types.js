'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GraphQLCustomScalarType = undefined;

var _graphql = require('graphql');

var _language = require('graphql/language');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GraphQLCustomScalarType = exports.GraphQLCustomScalarType = function (_GraphQLScalarType) {
  _inherits(GraphQLCustomScalarType, _GraphQLScalarType);

  function GraphQLCustomScalarType(name, description, parser) {
    _classCallCheck(this, GraphQLCustomScalarType);

    return _possibleConstructorReturn(this, (GraphQLCustomScalarType.__proto__ || Object.getPrototypeOf(GraphQLCustomScalarType)).call(this, {
      name: name,
      description: description,
      serialize: function serialize(value) {
        return value;
      },
      parseValue: function parseValue(value) {
        var ast = {
          kind: _language.Kind.STRING,
          value: value
        };
        return parser(ast);
      },
      parseLiteral: function parseLiteral(ast) {
        return parser(ast);
      }
    }));
  }

  return GraphQLCustomScalarType;
}(_graphql.GraphQLScalarType);